<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>hu.eteosf.gergokovacs.userorders</groupId>
	<artifactId>user-orders-manager</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>user-orders-manager</name>
	<description>A system for managing orders of users</description>

	<properties>
		<java.version>1.8</java.version>
		<maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
		<swagger-codegen-maven-plugin.version>3.0.0</swagger-codegen-maven-plugin.version>
		<swagger-annotations.version>1.5.21</swagger-annotations.version>
		<togglz-spring-boot-starter.version>2.6.1.Final</togglz-spring-boot-starter.version>
		<spring-boot-starter.version>2.1.6.RELEASE</spring-boot-starter.version>
		<org.liquibase.version>3.6.3</org.liquibase.version>
		<com.h2database.version>2.0.206</com.h2database.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>${spring-boot-starter.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
			<version>${spring-boot-starter.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring-boot-starter.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<version>${spring-boot-starter.version}</version>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring-boot-starter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<version>${org.liquibase.version}</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
			<version>${com.h2database.version}</version>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger-annotations.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot-starter.version}</version>
			</plugin>
			<plugin>
				<groupId>io.swagger.codegen.v3</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<version>${swagger-codegen-maven-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<!-- specify the swagger yaml -->
							<inputSpec>src/main/resources/api/userapi.yaml</inputSpec>

							<!-- hint: if you want to generate java server code, e.g. based on Spring Boot,
                                 you can use the following target: <language>spring</language> -->
							<language>spring</language>

							<!-- pass any necessary config options -->
							<configOptions>
								<interfaceOnly>true</interfaceOnly>
								<dateLibrary>java8</dateLibrary>
							</configOptions>

							<!-- override the default library to spring-boot -->
							<library>spring-boot</library>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
